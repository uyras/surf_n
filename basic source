'+++++++++++++++++++++++++++++++++++++++++++++++++
'массив диаметров при создании образца
'массив модулей моментов в дальнейшем
dim md(800)
     DIM vol(800)    ' объемы частиц
' Координаты частиц
     DIM X0(800)
     DIM y0(800)
     DIM z0(800)
' Направляющие косинусы осей частиц
     DIM cosX(800)
     DIM cosY(800)
     DIM cosZ(800)
' магнитные моменты
     dim mx(800)
     dim my(800)
     dim mz(800)
     DIM hrrx(800)    ' поля взаимодействия x сост.
     DIM hrry(800)    ' поля взаимодействия
     DIM hrrz(800)    ' поля взаимодействия z сост.
     DIM hrm(800)    ' модули полей взаимодействия
     DIM h0(800)     ' критические поля
dim num(800) AS INTEGER    'порядок перебора частиц
dim gs(20) AS INTEGER    ' распределение полей взаимодействия
dim gs0(20) AS INTEGER    ' распределение полей взаимодействия
'dim gs1(20) AS INTEGER    ' распределение полей взаимодействия
     DIM n AS INTEGER
     DIM M AS INTEGER
     DIM l AS INTEGER
     DIM i AS INTEGER
     DIM nx AS INTEGER
     DIM nss AS INTEGER
     DIM r AS INTEGER
     DIM rejim AS INTEGER
declare sub inter(hr, t%)
declare sub inter1(hrx, hry, hr, t%)
declare sub inter2()
declare sub surf (dstep, lObr, f)
declare sub ide2 (hmax, hk)
declare sub ide4 (hmax, hk)
//declare sub norm (hmax)
declare sub orient (H)
declare sub induct (hmax)
'-----------
     f=0
h0min = 10
h0max = 60
     kl = 1E-4
     kv = 1E-12

     I0s = 500    'спонтанная намагниченность
'beg:
         CLS
     input "Нач. сост.=  1 ЕС, 2- НС, 3- Ориент, 4- Насыщение 5-индукт";
state
     input "режим -1 нач. сост. 2 - поле H, 3 - норм1, 4 - идеальная
5-индукт, 6-norm2"; rejim
     input "Количество частиц на сторону"; f
     input " шаг "; dstep// шаг решетки в диаметрах
     m=f^2
     input "Ориентация осей: 1-по оси Z, 2-нормально, 3-случайная"; r
     input "Начинать с частицы N="; nss
     INPUT "Имя Файла "; name$
     rand=1
      RANDOMIZE rand
     call surf (dstep, lObr, f)
     m0= kv*vol(1)*I0s
     for i=1 to m
     num(i)=i
     next i
     nss=nss-1
     if nss>0 then
'сдвинем num() влево на nss позиций
     for l=1 to nss
     nx=num(1)
     for i=1 to m-1
     num(i)=num(i+1)
     next i
     num(m)=nx
     next l
     end if

     if state=2 then
     hk=0
     hmax=250
call ide4 (hmax, hk)
     end if
     if state=3 then
     input "Horient="; H
  call orient (H)
     end if
     if state=4 then call induct (900)
     if state=5 then call induct (0)
     Irs=0
     irNs=0
     IrsY=0
     IrNsY=0
' Остаточная после создания обр. и насыщения
     for i = 1 to m
IrNs = IrNs +mz(i)/kv
IrNsY = IrNsY +my(i)/kv
Irs = Irs + abs(mz(i))/kv
IrsY = IrsY + abs(my(i))/kv
     next i
     Irs=int(Irs/10)
     IrsY=int(IrsY/10)
     IrNs=int(IrNs/10)
     IrNsY=int(IrNsY/10)


' Подсчитаем поле взаимод. для всех частиц
     call inter2
'магнитная энергия
     for i=1 to m
     eng1=eng1-(mx(i)*hrrx(i)+my(i)*hrry(i)+mz(i)*hrrz(i))/2
     next i
' Найдем макс. значение
     hrrmax= abs(hrm(1))
     for i=2 to m
     if abs(hrm(i)) > hrrmax then hrrmax = abs(hrm(i)): nmax=i
     next i
' округлим до 20 и умножим на 2
     hrrmax=int(hrrmax/20)*40
' распределение полей взаимодействия, первые 20 э
'    hrrmax = 20
     for n=1 to 20
     gs0(n)=0
     for i=1 to m
     if abs(hrm(i)) >= (n-1)*hrrmax/20 and abs(hrm(i)) < n*hrrmax/20
then gs0(n)=gs0(n) +1
     next i
next n

beg:    cls
     play "gp8"
     if rejim=1 then
     end if
input "hmax="; hmax0
     hmax=hmax0
     if rejim=2 then
  call norm (hmax)
     end if
     if rejim=3 then
  call norm (hmax)
     hmax=0
     call norm (hmax)
     end if
     if rejim=4 then
input "hk="; hk
  call ide4 (hmax, hk)
     end if
     if rejim=5 then call induct (hmax)
     if rejim=6 then
     call induct (hmax)
     hmax=0
     call induct (hmax)
     end if
     ' подсчитаем намагниченность
     IrZ = 0
     IrY=0
     for i = 1 to m
     IrY = IrY + my(i)/kv
     IrZ = IrZ + mz(i)/kv
     next i
     IrY=int(IrY/10)
     IrZ=int(IrZ/10)
' Подсчитаем поле взаимод. для всех частиц
     call inter2
'магнитная энергия
     for i=1 to m
     eng2=eng2-(mx(i)*hrrx(i)+my(i)*hrry(i)+mz(i)*hrrz(i))/2
     next i
' Найдем макс. значение
     hrimax= abs(hrm(1))
     for i=2 to m
     if abs(hrm(i)) > hrimax then hrimax = abs(hrm(i)): nmax=i
     next i
' распределение полей взаимодействия до hrrmax э
     for n=1 to 20
'    gs(n)=0
     for i=1 to m
     if abs(hrm(i)) >= (n-1)*hrrmax/20 and abs(hrm(i)) < n*hrrmax/20
then gs(n)=gs(n) +1
     next i
next n

' распределение полей взаимодействия, первые 20 э
'        hrimax0 = 20
'    for n=1 to 20
'    gs1(n)=0
'    for i=1 to m
'    if abs(hrm(i)) >= (n-1)*hrimax0/20 and abs(hrm(i)) < n*hrimax0/20
then gs1(n)=gs1(n) +1
'    next i
'next n
     play "gp8"
     CLS
   CLOSE #2

         OPEN name$+ ".dat" FOR OUTPUT AS #2
     PRINT #2, DATE$; "surf"
         PRINT #2, "step="; dstep
         PRINT #2, "m="; m
         PRINT #2, "state "; state
         PRINT #2, "rejim="; rejim
         PRINT #2, "I0s="; I0s
         PRINT #2, "Irs="; Irs
         PRINT #2, "IrsY="; IrsY
         PRINT #2, "IrNs="; IrNs
         PRINT #2, "IrNsY="; IrNsY
         PRINT #2, "hk="; hk
         PRINT #2, "hmax="; hmax0
         PRINT #2, "H orient="; H
         PRINT #2, "IrZ="; IrZ
         PRINT #2, "IrY="; IrY
         PRINT #2, "eng1="; eng1
         PRINT #2, "eng2="; eng2
         PRINT #2, "hMax="; hriMax
         PRINT #2, "Start Num="; nss+1
         PRINT #2,
         PRINT #2, " No     mHr       cosX     CosZ    mx/md
my/md       mz/md    "
         PRINT #2,
         FOR i = 1 TO m
hmr=sqr(hrrx(i)^2+hrry(i)^2+(hrrz(i)+hmax)^2)
     cosHrx=hrrx(i)/hmr
     cosHrz=(hrrz(i)+hmax)/hmr

         PRINT #2, USING " ###   #####.#  ##.##   ##.##  ##.##  ##.##
##.##"; i; hmr; cosHrx; cosHrz; mx(i)/md(i); my(i)/md(i); mz(i)/md(i)
          NEXT i
         PRINT #2,
'        FOR i = 1 TO m
'        PRINT #2, USING " ####    ###.#    ####.#    ##.###"; i;
x0(i)/kl; z0(i)/kl; cosZ(i)
'         NEXT i
         PRINT #2, m

         PRINT #2, "hMax="; hrimax
         PRINT #2,
         PRINT #2, " No    H     dN0(Hrr)     dN(Hrr)"
         PRINT #2,
         FOR i = 1 TO 20
         PRINT #2, USING " ###   ####   ####   ####"; i; (hrrmax/20)*i;
gs0(i); gs(i)
         NEXT i
         PRINT #2,
'        FOR i = 1 TO m
  '       PRINT #2, USING " ####    ####"; i; num(i)
'         NEXT i
         CLOSE #2
         OPEN name$+ ".txt" FOR OUTPUT AS #2
         PRINT #2, m
         FOR i = 1 TO m
         PRINT #2, USING " ####    ##.##    ##.##"; i; mx(i)/md(i);
mz(i)/md(i)
          NEXT i
         CLOSE #2

Quit:
END

'======================================================================
sub ide2 (hmax, hk)
shared mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m as integer
     DIM n AS INTEGER
     do    ' общий цикл
     ' положительная полуволна
' найдем первую отрицательнуючаст.

n = 1
     do
     if cosZ(n)> 0 then n=n+1: goto ideal1
     call inter(hr, n)
     if hmax +hk+hr< h0(n) then n=n+1: goto ideal1
'  изменим знаки косинусов
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     mx(n)=-mx(n): my(n)=-my(n): mz(n)=-mz(n)
     n=1
ideal1:
     loop until n = m+1
     hmax = hmax - .5
' отрицательная полуволна
n = 1
     do
     if cosZ(n)< 0 then N=N+1: GOTO IDEAL2
     call inter(hr, n)
     if -hmax +hk+hr>-h0(N) then N=N+1: GOTO IDEAL2
'  изменим знаки косинусов
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     mx(n)=-mx(n): my(n)=-my(n): mz(n)=-mz(n)
     n=1
IDEAL2:
     loop until n = m+1
     hmax = hmax - .5
     loop until hmax <= 0  'h0min-6
     play "gp8"
     end sub
     sub ide4 (hmax, hk)
shared mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m as integer
     DIM n AS INTEGER
     do    ' общий цикл
     ' положительная полуволна
n = 1
     do
     if cosZ(n)> 0 then n=n+1: goto ideal41
     call inter1(hrx, hry, hrz, n)
     hz=hrz+hmax+hk
if mx(n)*hrx+my(n)*hry+mz(n)*hz<0 and hrx*hrx+hry*hry+hz*hz>h0(n)*h0(n) then
'  изменим знаки косинусов
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     mx(n)=-mx(n): my(n)=-my(n): mz(n)=-mz(n)
     n=0
     end if
     n=n+1
ideal41:
     loop until n = m+1
     hmax = hmax - 0.5
' отрицательная полуволна
n = 1
     do
     if cosZ(n)< 0 then n=n+1: GOTO IDEAL4
     call inter1(hrx, hry, hrz, n)
     hz=hrz-hmax+hk
if mx(n)*hrx+my(n)*hry+mz(n)*hz<0 and hrx*hrx+hry*hry+hz*hz>h0(n)*h0(n) then
'  изменим знаки косинусов
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     mx(n)=-mx(n): my(n)=-my(n): mz(n)=-mz(n)
     n=0
     end if
     n=n+1
IDEAL4:
     loop until n = m+1
     hmax = hmax - 0.5
     loop until hmax <= 0  'h0min-6
     play "gp8"
     end sub
     sub ns (hmax, hk)
shared mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m as integer
     DIM n AS INTEGER
n=1
do
'    t%=n
     call inter1(hrx, hry, hrz, n)
  if mx(n)*hrx+my(n)*hry+mz(n)*hrz>0 then n=n+1: goto exns
   if mz(n)*hrz>=0 then n=n+1: goto exns
'     если угол острый, продолжать
' если нет, . перевернуть и сначала
     mx(n)=-mx(n)
     my(n)=-my(n)
     mz(n)=-mz(n)
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     n=1
exns:
     loop until n=m+1
     end sub

     sub orient (H)
shared m0, mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m as integer
     DIM n AS INTEGER
n=1
do
     call inter1(hrx, hry, hrz, n)
     hr0=sqr(hrx^2+hry^2+(H+hrz)^2)
cosA=(mx(n)*hrx+my(n)*hry+mz(n)*(H+hrz))/(m0*hr0)
     if cosA=0 then cosA=.01
     if cosA>.999 then n=n+1: goto or2
' если угол малый, продолжать
' если угол большой, расположить по полю и сначала
     cosX(n) = hrx/hr0
     cosY(n) = hry/hr0
     cosZ(n) = (H+hrz)/hr0
     mx(n)=m0*cosX(n)
     my(n)=m0*cosY(n)
     mz(n)=m0*cosZ(n)
     n=1
or2:    loop until n=m+1
     end sub
     sub norm (hmax)
shared mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m as integer
     DIM n AS INTEGER
n=1
do
     call inter1(hrx, hry, hrz, n)
     if mx(n)*hrx+my(n)*hry+mz(n)*(hmax+hrz)>0 then n=n+1: goto retrn1
' если угол осрый, продолжать
     if hrx*hrx+hry*hry+(hmax+hrz)*(hmax+hrz)<h0(n)*h0(n) then n=n+1:
goto retrn1
' если поле меньше крит., продолжать
' иначе, перевернуть и сначала
     mx(n)=-mx(n)
     my(n)=-my(n)
     mz(n)=-mz(n)
     cosX(n) = - cosX(n)
     cosY(n) = - cosY(n)
     cosZ(n) = - cosZ(n)
     n=1
retrn1:    loop until n=m+1
     end sub
     sub induct (hmax)
shared md(), hrrz(), mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(), m
as integer
     shared num() as integer
     pi=3.1415825
     DIM n AS INTEGER
     DIM l AS INTEGER
     DIM nt AS INTEGER
     l=1
do
     n=num(l)
     call inter1(hrx, hry, hrz, n)
'модуль поля
     hm=sqr(hrx^2+hry^2+(hrz+hmax)^2)
     cosHX=hrx/hm: cosHY=hry/hm: cosHZ=(hrz+hmax)/hm
     H=hm/h0(n)    'приведенное поле
     'Составляющие приведенного поля в системе, связанной с осями
rot0:
cosHM=(cosX(n)*cosHX+cosY(n)*cosHY+cosZ(n)*cosHZ)
     if cosHM>.99999 then cosHM=0.99999
     if cosHM<-.99999 then cosHM=-0.99999
     if cosHM=0 then cosHM=0.00001
     sinHM=sqr(1-cosHM^2)
     if cosHM<0 then sinHM=-sinHM
     teta=atn(abs(sinHM/cosHM))
     h0x1=H*sinHM
h0z1=H*cosHM
'    h0x1=H*sqr(1-h0z1^2)
'вспомогательные соотношения
sx=-(cosY(n)*(cosX(n)*cosHY-cosY(n)*cosHX)-cosZ(n)*(cosZ(n)*cosHX-cosX(n)*cosHZ))/sinHM
sz=-(cosX(n)*(cosZ(n)*cosHX-cosX(n)*cosHZ)-cosY(n)*(cosY(n)*cosHZ-cosZ(n)*cosHY))/sinHM
sy=-(cosZ(n)*(cosY(n)*cosHZ-cosZ(n)*cosHY)-cosX(n)*(cosX(n)*cosHY-cosY(n)*cosHX))/sinHM
'Составляющие момента в поле H
     if cosHM<0 then
     if H>=1 then cosX(n)=-cosX(n): cosY(n)=-cosY(n): cosZ(n)=-cosZ(n):
goto rot0
'перевернуть без сомнения
'иначе вычислим поле срыва по астроиде
' Hx^2/3+Hz^2/3=h0^2/3'
' (Hm/h0)^2/3=h^2/3=1/(cosX^2/3+cosZ^2/3)
     a=exp((2/3)*log(abs(sinHM)))+exp((2/3)*log(abs(cosHM)))
     h0r=(sqr(1/a))^3
     if abs(H)>h0r then
     cosX(n)=-cosX(n): cosY(n)=-cosY(n): cosZ(n)=-cosZ(n)
     goto rot0
'Если перевернули, то сначала
     end if
'угол между полем и осью
     teta=pi-teta
     if teta>179.5*pi/180 then l=l+1: goto retr1
'вблизи 180 углы считаются некорректно?
     nt=1
     a=0
     do
     fi=(nt/2)*pi/180
'    if (teta-fi)<0.5*pi/180 then exit do
     hnt=-sin(2*(-fi))/(2*sin(teta-fi))
     if hnt>=H or a>hnt then exit do
     a=hnt
     nt=nt+1
     loop
     fi=fi-0.25*pi/180
     cosm0=cos(fi)
'--новые моменты в старой системе
     mx0=md(n)*(cosm0*cosX(n)-sqr(1-cosm0^2)*sx)
     my0=md(n)*(cosm0*cosY(n)-sqr(1-cosm0^2)*sy)
     mz0=md(n)*(cosm0*cosZ(n)-sqr(1-cosm0^2)*sz)
     end if
     if cosHM>0 then
     nt=1
     do
     fi=(nt/2)*pi/180
     if (teta-fi)*180/pi<=0.5 then exit do
     hnt=-sin(2*(-fi))/(2*sin(teta-fi))
     if hnt>=H then exit do
     nt=nt+1
     loop
     fi=fi-0.25*pi/180
     cosm0=cos(fi)
'--новые моменты в старой системе
     mx0=md(n)*(cosm0*cosX(n)+sqr(1-cosm0^2)*sx)
     my0=md(n)*(cosm0*cosY(n)+sqr(1-cosm0^2)*sy)
     mz0=md(n)*(cosm0*cosZ(n)+sqr(1-cosm0^2)*sz)
     end if
'угол между текущим моментом и вычесленным
     cosAmm=(mx0*mx(n)+my0*my(n)+mz0*mz(n))/md(n)^2
     if (cosAmm)>0.999 then l=l+1: goto retr1
' заменить на расчетные
     mx(n)=mx0
     my(n)=my0
     mz(n)=mz0
     l=1
retr1:    loop until l=m+1
play "gp8"
     end sub

sub inter(hr, t%)
shared x0(), y0(), z0(), mx(), my(), mz(), m as integer
'    hr= hrr(t%)
'    goto int2
dim it as integer
     hr=0
     for it =1 to m
     if it= t% then goto intr0
     r2= (x0(t%)-x0(it))*(x0(t%)-x0(it))
+(y0(t%)-y0(it))*(y0(t%)-y0(it)) + (z0(t%)-z0(it))*(z0(t%)-z0(it))
'    r2= ((x0(t%)-x0(it))^2 +(y0(t%)-y0(it))^2 + (z0(t%)-z0(it))^2)
     r1= sqr(r2)
  mxr1=
(mx(it)*(x0(t%)-x0(it))+my(it)*(y0(t%)-y0(it))+mz(it)*(z0(t%)-z0(it)))
' hx=(3*mxr1*kl*(x0(t%)-x0(it))/r1^5)-mx1/r1^3
' hy=(3*mxr1*kl*(y0(t%)-y0(it))/r1^5)-my1/r1^3
  hrz=((3*mxr1*(z0(t%)-z0(it))/r2)-mz(it))/(r2*r1)
     hr = hr + hrz
intr0:    next it
int2:
end sub
sub inter1(hrx, hry, hr, t%)
shared x0(), y0(), z0(), mx(), my(), mz(), m as integer
dim it as integer
     hrx=0
     hry=0
     hr=0
     for it =1 to m
     if it= t% then goto intr10
     r2= (x0(t%)-x0(it))*(x0(t%)-x0(it))
+(y0(t%)-y0(it))*(y0(t%)-y0(it)) + (z0(t%)-z0(it))*(z0(t%)-z0(it))
'    r2= ((x0(t%)-x0(it))^2 +(y0(t%)-y0(it))^2 + (z0(t%)-z0(it))^2)
     r1= sqr(r2)
  mxr1=
(mx(it)*(x0(t%)-x0(it))+my(it)*(y0(t%)-y0(it))+mz(it)*(z0(t%)-z0(it)))
  hx=((3*mxr1*(x0(t%)-x0(it))/r2)-mx(it))/(r2*r1)
  hy=((3*mxr1*(y0(t%)-y0(it))/r2)-my(it))/(r2*r1)
  hrz=((3*mxr1*(z0(t%)-z0(it))/r2)-mz(it))/(r2*r1)
     hrx=hrx+hx
     hry=hry+hy
     hr = hr + hrz
intr10:    next it
end sub
     sub inter2
' Подсчитаем поле взаимод. для всех частиц
shared hrm(), hrrx(), hrry(), hrrz(), x0(), y0(), z0(), mx(), my(),
mz(), m as integer
     for n=1 to m
     hrx=0
     hry=0
     hrz=0
     for i =1 to m
     if i= n then goto inter0
     r2= (x0(n)-x0(i))*(x0(n)-x0(i)) +(y0(n)-y0(i))*(y0(n)-y0(i)) +
(z0(n)-z0(i))*(z0(n)-z0(i))
     r1=sqr(r2)
  mxr1= (mx(i)*(x0(n)-x0(i))+my(i)*(y0(n)-y0(i))+mz(i)*(z0(n)-z0(i)))
  hrx=hrx+((3*mxr1*(x0(n)-x0(i))/r2)-mx(i))/(r2*r1)
  hry=hry+((3*mxr1*(y0(n)-y0(i))/r2)-my(i))/(r2*r1)
  hrz=hrz+((3*mxr1*(z0(n)-z0(i))/r2)-mz(i))/(r2*r1)
inter0:    next i
     hrrx(n)=hrx
     hrry(n)=hry
     hrrz(n)=hrz
     hrm(n)=sqr(hrx^2+hry^2+hrz^2)
     next n
     end sub
sub surf (dstep, lObr, f)
shared x0(), y0(), z0(), mx(), my(), mz(), cosX(), cosY(), cosZ(), h0(),
md(), I0s, vol(), m as integer
shared r as integer
h0min = 10
h0max = 60
     kl = 1E-4
     kv = 1E-12

     I0s = 500    'спонтанная намагниченность
pi=3.14158
     vol=.5    ' временно, все равны//micron
' координаты частиц
     for l=1 to f
     for i=1 to f
     x0(i+(l-1)*f)=i-1
     y0(i+(l-1)*f)=0
     z0(i+(l-1)*f)=l-1
next i
     next l
'приведем координаты к 1
     for i =1to m
     x0(i)=x0(i)* dstep
     y0(i)=y0(i)* dstep
     z0(i)=z0(i)* dstep
     next i
' и направляющие косинусы осей частиц
  FOR i=1 TO m
     fi=rnd*2*pi
     cosX(i)=sin(fi)
     cosZ(i)=cos(fi)
     cosY(i)=0
if r=1 then

     cosX(i)=0    ' если все параллельны
     cosY(i)=0
     cosZ(i)=1    ' все по полю
     end if
     if r=2 then
'по оси Y, нормально к плоскости
     cosX(i)=0
     cosY(i)=1
     cosZ(i)=0
     end if
  NEXT i
' массив критических полей
     l=1
     do
  d0=h0max * RND
     if d0>h0min then
     h0(l) = d0
l=l+1
     end if
     loop until l=m+1
     for i=1 to m
     h0(i)= 5    ' если все равны
     next i
' Определим массив объемов
     l=1
     vob =0
     do
  d0=RND
     if d0>0.2 then
     md(l) = d0
     md(l) = 1    ' временно все размеры =1
     vol(l) = 4/3 * 3.141 * (md(l)/2) ^3
'----
     vol(l)=.5    ' временно, все равны
'----
     vob = vob + vol(l)
l=l+1
     end if
     loop until l=m+1
' подсчитаем моменты
     for i=1 to m
     mx(i)= kv*vol(i)*cosX(i)*I0s
     my(i)= kv*vol(i)*cosY(i)*I0s
     mz(i)= kv*vol(i)*cosZ(i)*I0s
     md(i)= kv*vol(i)*I0s
     next i
'выразим координаты в см
     for i=1 to m
     x0(i)=x0(i)*kl
     y0(i)=y0(i)*kl
     z0(i)=z0(i)*kl
next i
ex0:
     end sub